var _user$project$Main$showWarning = F3(
	function (etype, error, msg) {
		showWarning:
		while (true) {
			var _p0 = error;
			if (_p0.ctor === 'Existing') {
				if (_elm_lang$core$Native_Utils.eq(_p0._0, etype)) {
					return A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'color', _1: 'red'},
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(msg),
							_1: {ctor: '[]'}
						});
				} else {
					var _v1 = etype,
						_v2 = _p0._1,
						_v3 = msg;
					etype = _v1;
					error = _v2;
					msg = _v3;
					continue showWarning;
				}
			} else {
				return A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{ctor: '[]'});
			}
		}
	});
var _user$project$Main$defaultWarning = function (errorType) {
	var _p1 = errorType;
	switch (_p1.ctor) {
		case 'PwToShort':
			return 'PasswordToShort';
		case 'PwDontMatch':
			return 'Password and confirmation don\'t match';
		case 'NameTooLong':
			return 'Name is too long';
		default:
			return 'Age is not a whole number';
	}
};
var _user$project$Main$showDefaultWarning = F2(
	function (errorType, error) {
		return A3(
			_user$project$Main$showWarning,
			errorType,
			error,
			_user$project$Main$defaultWarning(errorType));
	});
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {name: a, password: b, passwordAgain: c, age: d, error: e};
	});
var _user$project$Main$AgeNaN = {ctor: 'AgeNaN'};
var _user$project$Main$NameTooLong = {ctor: 'NameTooLong'};
var _user$project$Main$PwDontMatch = {ctor: 'PwDontMatch'};
var _user$project$Main$PwToShort = {ctor: 'PwToShort'};
var _user$project$Main$possibleErrors = {
	ctor: '::',
	_0: {
		ctor: '_Tuple2',
		_0: function (model) {
			return _elm_lang$core$Native_Utils.cmp(
				_elm_lang$core$String$length(model.password),
				8) < 0;
		},
		_1: _user$project$Main$PwToShort
	},
	_1: {
		ctor: '::',
		_0: {
			ctor: '_Tuple2',
			_0: function (model) {
				return !_elm_lang$core$Native_Utils.eq(model.password, model.passwordAgain);
			},
			_1: _user$project$Main$PwDontMatch
		},
		_1: {
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: function (model) {
					return _elm_lang$core$Native_Utils.cmp(
						_elm_lang$core$String$length(model.name),
						20) > 0;
				},
				_1: _user$project$Main$NameTooLong
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: function (model) {
						var _p2 = _elm_lang$core$String$toInt(model.age);
						if (_p2.ctor === 'Err') {
							return true;
						} else {
							return false;
						}
					},
					_1: _user$project$Main$AgeNaN
				},
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$Existing = F2(
	function (a, b) {
		return {ctor: 'Existing', _0: a, _1: b};
	});
var _user$project$Main$NoError = {ctor: 'NoError'};
var _user$project$Main$model = A5(_user$project$Main$Model, '', '', '', '', _user$project$Main$NoError);
var _user$project$Main$checkModel = function (model) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (_p3, prevError) {
				var _p4 = _p3;
				return _p4._0(model) ? A2(_user$project$Main$Existing, _p4._1, prevError) : prevError;
			}),
		_user$project$Main$NoError,
		_user$project$Main$possibleErrors);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p5 = msg;
		switch (_p5.ctor) {
			case 'Name':
				return _elm_lang$core$Native_Utils.update(
					model,
					{name: _p5._0});
			case 'Password':
				return _elm_lang$core$Native_Utils.update(
					model,
					{password: _p5._0});
			case 'PasswordAgain':
				return _elm_lang$core$Native_Utils.update(
					model,
					{passwordAgain: _p5._0});
			case 'Age':
				return _elm_lang$core$Native_Utils.update(
					model,
					{age: _p5._0});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						error: _user$project$Main$checkModel(model)
					});
		}
	});
var _user$project$Main$Submit = {ctor: 'Submit'};
var _user$project$Main$Age = function (a) {
	return {ctor: 'Age', _0: a};
};
var _user$project$Main$PasswordAgain = function (a) {
	return {ctor: 'PasswordAgain', _0: a};
};
var _user$project$Main$Password = function (a) {
	return {ctor: 'Password', _0: a};
};
var _user$project$Main$Name = function (a) {
	return {ctor: 'Name', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Name'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Name),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(_user$project$Main$showDefaultWarning, _user$project$Main$NameTooLong, model.error),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('password'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('Password'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Password),
											_1: {ctor: '[]'}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(_user$project$Main$showDefaultWarning, _user$project$Main$PwToShort, model.error),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$input,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('password'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$placeholder('Re-enter Password'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$PasswordAgain),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Main$showDefaultWarning, _user$project$Main$PwDontMatch, model.error),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$type_('Age'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$placeholder('Enter your age'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Age),
													_1: {ctor: '[]'}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(_user$project$Main$showDefaultWarning, _user$project$Main$AgeNaN, model.error),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Submit),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('submit'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})();
